# 1부터 20까지 숫자가 하나씩 쓰인 20장의 카드가 아래 그림과 같이 오름차순으로 한 줄로 놓여있다. 각 카드의 위치는 카드 위에 적힌 숫자와 같 이 1부터 20까지로 나타낸다.
# 이제 여러분은 다음과 같은 규칙으로 카드의 위치 를 바꾼다: 구간 [a, b] (단, 1 ≤ a ≤ b ≤ 20) 가 주어지면 위치 a부터 위치 b까지의 카드를 현재의 역순으로 놓는다.

# 오름차순으로 한 줄로 놓여있는 20장의 카드에 대해 10개의 구간이 주어지면, 주어진 구간의 순서대로 위의 규칙에 따라 순서를 뒤집는 작업을 연속해서 처리한 뒤 
# 마지막 카드들의 배치를 구하는 프로그램을 작성하시오.

"""
5 10
9 13
1 2
3 4
5 6
1 2
3 4
5 6
1 20
1 20

1 2 3 4 10 9 8 7 13 12 11 5 6 14 15 16 17 18 19 20
"""

# 1부터 20까지의 숫자를 담은 list를 생성한다.
cards = list(range(1, 21))

# 10번에 걸쳐 주어진 입력값에 따라 카드를 섞는데,
# python의 slice라는 개념을 활용한다.
for t in range( 10 ) :
    inp = list(map(int, input().split()))
    frm = inp[0] - 1
    to = inp[1]
    # slice를 활용하면 객체의 부분을 추출하거나 대치할 수 있다.
    # 내장함수 reversed()는 객체를 뒤집은 새로운 객체를 만들어 반환해준다.
    # 이를 활용하여 인덱스 frm부터 to까지의 카드를 역순으로 뒤집은 다음
    # 원래 list의 해당 인덱스 부분에 덮어써준다.
    cards[frm:to] = reversed(cards[frm:to])

# 문제에서 원하는 답안의 출력형태를 만들기 위하여
# 기본 [1, 2, 3, 4, ... 19, 20]이던 출력형태에서 [],를 삭제한 후 출력한다.
print(str(cards).replace('[', '').replace(']', '').replace(',', ''))
